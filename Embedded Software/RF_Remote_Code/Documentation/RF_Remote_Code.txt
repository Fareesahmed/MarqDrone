=============================================================================
List of generated methods in project: RF_Remote_Code

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "USB1"      (component FSL_USB_Stack)
   - USB1_Deinit -Deinitializes the driver
   - USB1_Init -Initializes the driver

Module "CS1"       (component CriticalSection)
   - CS1_CriticalVariable -Defines a variable if necessary. This is a macro.
   - CS1_EnterCritical -Enters a critical section
   - CS1_ExitCritical -Exits a critical section

Module "TPM1"      (component Init_TPM_VAR0)
   - TPM1_Init -This method initializes registers of the TPM module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "PTD"       (component Init_GPIO_VAR0)
   - PTD_Init -This method initializes registers of the GPIO module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "ADC0"      (component Init_ADC_VAR0)
   - ADC0_Init -This method initializes registers of the ADC module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "SPI0"      (component Init_SPI_VAR1)
   - SPI0_Init -This method initializes registers of the SPI module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "WAIT1"     (component Wait)
   - WAIT1_Wait10Cycles -Wait for 10 CPU cycles.
   - WAIT1_Wait100Cycles -Wait for 100 CPU cycles.
   - WAIT1_WaitCycles -Wait for a specified number of CPU cycles (16bit data type).
   - WAIT1_WaitLongCycles -Wait for a specified number of CPU cycles (32bit data type).
   - WAIT1_Waitms -Wait for a specified time in milliseconds.
   - WAIT1_Waitus -Wait for a specified time in microseconds.
   - WAIT1_Waitns -Wait for a specified time in nano seconds.
   - WAIT1_WaitOSms -If an RTOS is enabled, this routine will use a non-blocking wait method. Otherwise it will do a 
                busy/blocking wait.

Module "TPM2"      (component Init_TPM_VAR0)
   - TPM2_Init -This method initializes registers of the TPM module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "RNG1"      (component RingBuffer)
   - RNG1_Clear -Clear (empty) the ring buffer.
   - RNG1_Put -Puts a new element into the buffer
   - RNG1_Get -Removes an element from the buffer
   - RNG1_Peek -Returns an element of the buffer without removiing it.
   - RNG1_NofElements -Returns the actual number of elements in the buffer.
   - RNG1_NofFreeElements -Returns the actual number of free elements/space in the buffer.
   - RNG1_Deinit -Driver de-initialization
   - RNG1_Init -Initializes the data structure

Module "IFsh1"     (component IntFLASH)
   - IFsh1_DisableEvent -This method disables all the events except <OnSaveBuffer>, <OnRestoreBuffer> and <OnEraseError>. The 
                method is available only if any event is enabled.
   - IFsh1_EnableEvent -This method enables all the events except <OnSaveBuffer>, <OnRestoreBuffer> and <OnEraseError>. The 
                method is available only if any event is enabled.
   - IFsh1_EraseVerify -Verifies entire memory array of the selected Flash block whether it is erased.
   - IFsh1_EraseSector -Erases the sector to which address Addr belongs.
   - IFsh1_SetByteFlash -Writes a byte to an address in FLASH. The operation of this method depends on the "Write method" 
                property and state of the flash. Please see more details on general info page of the help.
   - IFsh1_SetWordFlash -Writes a word to an address in FLASH. The operation of this method depends on the "Write method" 
                property and state of the flash. Please see more details on general info page of the help.
   - IFsh1_SetLongFlash -Writes a long word to an address in FLASH. The operation of this method depends on the "Write method" 
                property and state of the flash. Please see more details on general info page of the help.
   - IFsh1_SetBlockFlash -Writes data to FLASH. The operation of this method depends on the "Write method" property and state 
                of the flash. Please see more details on general info page of the help.

Module "PTC"       (component Init_GPIO_VAR0)
   - PTC_Init -This method initializes registers of the GPIO module according to the Peripheral Initialization settings. Call 
                this method in user code to initialize the module. By default, the method is called by PE automatically; see 
                "Call Init method" property of the component for more details.

Module "Cpu"       (component MKL25Z128LH4)

===================================================================================
